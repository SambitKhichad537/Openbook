@page "/company/register/{id}"
@layout LoginLayout
@inject IUser _user
@inject NavigationManager manager
<PageTitle>Register | Advince Books</PageTitle>



<div class="content container-fluid">
    <div class="page-header">
        <div class="content-page-header">
            <h6>Register</h6>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <EditForm Model="model" OnValidSubmit="Save">
                <DataAnnotationsValidator />
                <div class="card-body">
                    <div class="card">
                        <div class="form-group-item">
                            <div class="row">
                                <div class="col-lg-12 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-control-label">Email</label>
                                        <input class="form-control" type="text" @bind="model.Email">
                                        <ValidationMessage For="@(() => model.Email)" />
                                    </div>
                                </div>	<div class="col-lg-12 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-control-label">Name</label>
                                        <input class="form-control" type="text" @bind="model.Name">
                                        <ValidationMessage For="@(() => model.Name)" />
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-control-label">Password</label>
                                        <input class="form-control" type="password" @bind="model.Password">
                                        <ValidationMessage For="@(() => model.Password)" />
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="form-control-label">Confirm Password</label>
                                        <input class="form-control" type="password" @bind="model.ConfirmPassword">
                                        <ValidationMessage For="@(() => model.ConfirmPassword)" />
                                    </div>
                                </div>
                                <div class="form-group mb-0">
                                    <button class="btn btn-primary" type="submit" @onclick="Save">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public string id { get; set; }
    RegistroViewModel model = new RegistroViewModel();
    protected override async Task OnInitializedAsync()
    {
        model.PlanId = Convert.ToInt32(id);
        model.RoleName = "!Company";
    }
    private async Task Save()
    {
        int strStatus = await _user.Registro(model);
        if (strStatus > 0)
        {
            manager.NavigateTo("/Identity/Account/Login", true);
        }
    }
}
