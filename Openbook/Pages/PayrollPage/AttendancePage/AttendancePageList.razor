@page "/app/attendance/list"
@inject IAttendance _attendance
@inject IJSRuntime JSRuntime
@inject NavigationManager _navigation
@inject NotificationService NotificationService
<PageTitle>Attendance | List | Advince Books</PageTitle>
<div class="content container-fluid">
    <div class="page-header">
        <div class="content-page-header ">
        <div class="page-title">
            <h5>Attendance list</h5>
        </div>
        <div class="list-btn">
            <ul class="filter-list">
                <li>
                    <a class="btn btn-primary" href="/app/attendance/add"><i class="fa fa-plus-circle me-2" aria-hidden="true"></i>Add</a>
                </li>
            </ul>
        </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class=" card-table">
                <div class="card-body">
                    <div class="card">
                        <div class="list-btn">
                            <ul class="filter-list">
                                <li>
                                    <RadzenDatePicker @bind-Value=@strSearch DateFormat="d" Change="()=>Filtter()" Class="w-100" />
                                </li>
                            </ul>
                        </div>
                        <br />
                        <RadzenDataGrid AllowSorting="true" PageSize="10" AllowPaging="true" AllowFiltering="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                                        Data="@listModel" TItem="DailyAttendanceView" LogicalFilterOperator="LogicalFilterOperator.Or">
                            <Columns>
                                <RadzenDataGridColumn TItem="DailyAttendanceView" Property="Date" Title="Date" Width="800px" FormatString="{0:d}" Frozen="true" />
                                <RadzenDataGridColumn TItem="DailyAttendanceView" Title="Action" Frozen="true" Sortable="false" Filterable="false" Width="100px">
                                    <Template Context="data">
                                        <a class=" btn-action-icon" style="cursor:pointer;" @onclick="() =>Delete(data.DailyAttendanceMasterId)">
                                            <i class="fe fe-trash-2"></i>
                                        </a>
                                    </Template>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
            </div>
        </div>
    </div>
</div>
</div>
</div>



@code {
    DateTime strSearch = DateTime.UtcNow;
    IList<DailyAttendanceView> listModel;
    IList<DailyAttendanceView> listAll;
    protected override async Task OnInitializedAsync()
    {
            await LoadData();
    }
    private async Task LoadData()
    {
        listAll = await _attendance.GetAll();
        listModel = listAll;
        StateHasChanged();
    }
    private async Task Filtter()
    {
        listModel = listAll.Where(x => x.Date == strSearch).ToList();
        StateHasChanged();
    }
    private async Task Delete(int id)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            var result = await _attendance.Delete(id);
            if (result == true)
            {
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "", Detail = "The attendance has been deleted..", Duration = 3000 });
                await LoadData();
                StateHasChanged();
            }
            else
            {
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "", Detail = "This attendance cannot be deleted as it is associated either with some transactions or documents.", Duration = 3000 });
                StateHasChanged();
            }
        }
    }
    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }
}
