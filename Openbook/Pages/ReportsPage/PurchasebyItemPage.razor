@page "/app/reports/purchase-by-item"
@inject IInventoryReport report
@inject ICompany _company;
@inject IProduct _product
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation
<PageTitle>Purchase-by-Item | Openbook</PageTitle>
<div class="content container-fluid">
						<div class="card">
							<div class="">
			<!-- /Filter -->
				<div class="">
					<div class="">
					<div class="row">
						<div class="col-lg-3 col-sm-6 col-12">
							<div class="form-group">
								From Date
								<RadzenDatePicker @bind-Value=@dtFromDate DateFormat="d" Class="w-100" />
							</div>
						</div>
						<div class="col-lg-3 col-sm-6 col-12">
							<div class="form-group">
								To Date
								<RadzenDatePicker @bind-Value=@dtToDate DateFormat="d" Class="w-100" />
							</div>
						</div>
						<div class="col-lg-3 col-sm-6 col-12">
							<div class="form-group">
								Product
								<RadzenDropDown Style="width:100%;" @bind-Value="intProductId" Placeholder="All" AllowFiltering="true" Data="@(listProduct)" TextProperty="ProductName" ValueProperty="ProductId" />
							</div>
						</div>
						<div class="col-lg-3 col-sm-6 col-12">
							<div class="btn-group" style="margin-top:20px;">
								<a class="btn btn-default btn-with-tooltip" onclick="printDiv('PrintDiv')">
									<i class="fa fa-print"></i>
									<span class="caret"></span>
								</a>
							</div>
							<div class="btn-group" style="margin-top:20px;">
								<a @onclick="()=>LoadData()" class="btn btn-default btn-with-tooltip">
									<i class="fa fa-search"></i>
									<span class="caret"></span>
								</a>
							</div>
						</div>
						</div>
					</div>
				</div>
			</div>
			<!-- /Filter -->
			<div id="PrintDiv">
								<div class="table-responsive">
									<br/>
									<hr/>
				<table style="width: 100%;line-height: inherit;text-align: left;">
					<tbody>
						<tr>
							<td style="padding:5px;vertical-align:top;text-align:center;padding-bottom:20px">
								<font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 22px;color:#000;font-weight: 600;"> @company.CompanyName </font></font><br>
								<font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 17px;color:#000;font-weight: 600;">@company.Address</font></font><br>
								<font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 15px;color:#000;font-weight: 600;">@company.PhoneNo</font></font><br>
								<font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 16px;color:#000;font-weight: 600;"> Purchase By Item</font></font><br>
							</td>
						</tr>
					</tbody>
				</table>
<br/>
				@if(listModel == null)
				{

				}
				else
				{
						<table class="table">

							<thead>
							<tr style="background: #F3F2F7;">
								<th>S.No.</th>
								<th>Bill.No.</th>
								<th style="">Bill Date</th>
									<th style="">Discount Amount</th>
								<th style="">Tax Amount</th>
								<th>Total Amount</th>
							</tr>
							</thead>
							@{
								int sno = 0;
							}
							@foreach (var item in listModel)
							{
								<tr>
									<td>
										@{
											sno++;
										}
										@sno
									</td>
									<td>@item.VoucherNo</td>
									<td>@item.Date</td>
									<td>@PublicVariables._Symbol @item.BillDiscount</td>
									<td>@PublicVariables._Symbol@item.TotalTax</td>
									<td>@PublicVariables._Symbol@item.GrandTotal</td>
								</tr>
							}
							<tfoot>
								<tr style="font-weight:600;">
									<td>Total</td>
									<td></td>
									<td></td>
									<td></td>
									<td></td>
									<td>@PublicVariables._Symbol @listModel.Sum(i => i.GrandTotal)</td>
								</tr>
							</tfoot>
						</table>
				}
								</div>
								</div>
							</div>
						</div>
						<!-- /product list -->

@code {
	DateTime dtFromDate = DateTime.UtcNow.AddDays(-1);
	DateTime dtToDate = DateTime.UtcNow;
	IList<PurchaseMasterView> listModel;
	Company company = new Company();
	IList<ProductView> listProduct;
	int intProductId = 0;
	protected override async Task OnInitializedAsync()
	{
			company = await _company.GetById();
			listProduct = await _product.GetAll();
			intProductId = 0;
			await LoadData();
		StateHasChanged();
	}
	private async Task LoadData()
	{

		listModel = await report.PurchasebyItem(dtFromDate, dtToDate, intProductId);
		StateHasChanged();
	}
}
